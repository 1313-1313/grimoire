// Colors
$color-primary: #331d35;
$color-secondary: #32255f;
$color-muted: #fff;
$color-body: #dedede;
$color-border: #aeaeae;

// Media Queries breakpoints
$small: 480px;
$medium: 768px;
$large: 992px;
$x-large: 1200px;

// Grid variables
$items-per-row: 4;
$gutter-width: 2rem;
$grid-item-colors: (
  red: #700,
  blue: #007,
  green: #070
);

body {
  background: $color-primary;
  color: $color-body;
  font-family: 'Roboto', sans-serif;
}

.header {
  padding: 20px;
  text-align: center;
}

.title {
  color: $color-muted;
  font-weight: 400;
}

.container {
  display: flex;
  flex-wrap: wrap;
  max-width: 1600px;
  margin: 0 auto;
}

.main,
.topbar {
  width: 100%;
}

main {
  min-height: 150vh;
}

.topbar {
  display: flex;
}

.filter-group {
  flex-basis: calc(50% - 1rem);
  margin-right: 2.5rem;
  padding-left: 1rem;

  &:last-child {
    margin-right: 0;
  }
}

.filter-group__heading {
  margin-bottom: 1.8rem;
  padding-bottom: .5rem;
  border-bottom: 1px solid $color-border;
  font-weight: 600;
  text-transform: uppercase;
}

.filters {
  padding-left: 0;
  list-style: none;
}

.filter {
  margin: 1rem 0;

  a {
    display: block;
    color: $color-body;
    text-decoration: none;
  }
}

.grid {
  margin: 0 auto;

  @media screen and (min-width: $large) {
    width: 600px;
		margin-top: -4.8rem;
    height: auto !important;
    perspective: 1500px;
  }

  @media screen and (min-width: $x-large) {
    width: 800px;
    perspective: 1000px;
  }
}

.grid-items {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  padding-left: 0;
  list-style: none;

  @media screen and (min-width: $large) {
    position: absolute;
    width: 100%;
    height: 700px;
    transform: rotate3d(1, 0, 0, 75deg) rotate3d(0, 1, 0, 0deg) rotate3d(0, 0, 1, 45deg);
    transform-style: preserve-3d;
  }
}

.grid-item {
  position: relative;
  width: 100%;
  height: 200px;
  margin-bottom: $gutter-width;
  background: $color-muted;

  &::after {
    position: absolute;
    top: 18px;
    right: 20px;
    width: 20px;
    height: 20px;
    content: '';
  }

  @media screen and (min-width: $small) {
    width: calc((100% / 2) - #{$gutter-width});
  }

  @media screen and (min-width: $large) {
    width: calc((100% / 3) - #{$gutter-width});
  }

  @media screen and (min-width: $x-large) {
    width: calc((100% / #{$items-per-row}) - #{$gutter-width});
  }
}

@each $color-name, $color-hex in $grid-item-colors {
  .grid-item--#{$color-name} {
    &:not(.grid-item--triangle)::after {
      background: $color-hex;
    }

    &.grid-item--triangle::after {
      border-bottom: 20px solid $color-hex;
    }
  }
}

.grid-item--circle::after {
  border-radius: 50%;
}

.grid-item--triangle::after {
  width: 0;
  height: 0;
  border-right: 10px solid transparent;
  border-left: 10px solid transparent;
  background: none;
}

.grid-item__link {
  display: block;
  position: relative;
  width: 100%;
  height: 100%;

  &::before {
    position: absolute;
    width: 100%;
    height: 100%;
    transition: transform .3s, opacity .25s;
    background: $color-secondary;
    box-shadow: 30px 30px 10px rgba(0, 0, 0, .5);
    content: '';
    opacity: 0;
    z-index: 1;
    pointer-events: none;
  }

  &:hover,
  &:focus {
    &::before {
      transform: translate3d(0, 0, 20px);
      opacity: 1;
    }
  }
}
