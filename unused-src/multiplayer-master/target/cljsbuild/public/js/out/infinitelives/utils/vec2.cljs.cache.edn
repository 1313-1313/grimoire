;; Analyzed by ClojureScript 1.7.228
{:name infinitelives.utils.vec2, :doc "Vectors with 2 Dimensions. Utilises underlying google vector code.", :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires {Vec2 goog.vec.Vec2, goog.vec.Vec2 goog.vec.Vec2}, :imports nil, :defs {dot {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :line 87, :column 7, :end-line 87, :end-column 10, :arglists (quote ([v0 v1])), :doc "Returns the dot product of v0 and v1"}, :name infinitelives.utils.vec2/dot, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :end-column 10, :method-params ([v0 v1]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 87, :end-line 87, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v0 v1])), :doc "Returns the dot product of v0 and v1"}, almost {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :line 53, :column 7, :end-line 53, :end-column 13, :arglists (quote ([v0 v1] [v0 v1 & args])), :doc "Returns true if all the vectors passed in are so close they\n  are almost equal. This is for dealing with precision problems\n  in comparison.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([v0 v1]), :arglists ([v0 v1] [v0 v1 & args]), :arglists-meta (nil nil)}}, :name infinitelives.utils.vec2/almost, :variadic true, :file "target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([v0 v1]), :arglists ([v0 v1] [v0 v1 & args]), :arglists-meta (nil nil)}, :method-params ([v0 v1]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 2, :fn-var true, :arglists ([v0 v1] [v0 v1 & args]), :doc "Returns true if all the vectors passed in are so close they\n  are almost equal. This is for dealing with precision problems\n  in comparison."}, distance {:name infinitelives.utils.vec2/distance, :file "target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :line 36, :column 1, :end-line 39, :end-column 11, :arglist (quote ([v0 v1])), :doc "Return the distance between the tip of v0 and the tip of v1", :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :line 39, :column 3, :end-line 39, :end-column 11, :arglist (quote ([v0 v1])), :doc "Return the distance between the tip of v0 and the tip of v1"}}, add {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :line 73, :column 7, :end-line 73, :end-column 10, :arglists (quote ([v0 v1])), :doc "Returns a new vec2 which is v0 + v1"}, :name infinitelives.utils.vec2/add, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :end-column 10, :method-params ([v0 v1]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 73, :end-line 73, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v0 v1])), :doc "Returns a new vec2 which is v0 + v1"}, as-vector {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :line 194, :column 7, :end-line 194, :end-column 16, :arglists (quote ([v]))}, :name infinitelives.utils.vec2/as-vector, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :end-column 16, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 194, :end-line 194, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, direction {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :line 113, :column 7, :end-line 113, :end-column 16, :arglists (quote ([v0 v1])), :doc "returns a unit vector indicating the direction\n  from the tip of v0, to the tip of v1"}, :name infinitelives.utils.vec2/direction, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :end-column 16, :method-params ([v0 v1]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 113, :end-line 113, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v0 v1])), :doc "returns a unit vector indicating the direction\n  from the tip of v0, to the tip of v1"}, heading {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :line 160, :column 7, :end-line 160, :end-column 14, :arglists (quote ([v])), :doc "horrible function you shouldn't really use. Just keep working with\n  vectors directly. Returns the angle of the vector. Answers always\n  between 0 and 2*PI"}, :name infinitelives.utils.vec2/heading, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :end-column 14, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 160, :end-line 160, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v])), :doc "horrible function you shouldn't really use. Just keep working with\n  vectors directly. Returns the angle of the vector. Answers always\n  between 0 and 2*PI"}, zero {:name infinitelives.utils.vec2/zero, :file "target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :line 21, :column 1, :end-line 24, :end-column 7, :arglist (quote ([])), :doc "Return the zero two dimensional vector #<0,0>", :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :line 24, :column 3, :end-line 24, :end-column 7, :arglist (quote ([])), :doc "Return the zero two dimensional vector #<0,0>"}}, rotate-90 {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :line 129, :column 7, :end-line 129, :end-column 16, :arglists (quote ([v])), :doc "calls rotate but is hardcoded 90 degrees. Avoids calling cos and\n  sin"}, :name infinitelives.utils.vec2/rotate-90, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :end-column 16, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 129, :end-line 129, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v])), :doc "calls rotate but is hardcoded 90 degrees. Avoids calling cos and\n  sin"}, make {:name infinitelives.utils.vec2/make, :file "target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :line 16, :column 1, :end-line 19, :end-column 7, :arglist (quote ([])), :doc "Return the zero two dimensional vector #<0,0>", :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :line 19, :column 3, :end-line 19, :end-column 7, :arglist (quote ([])), :doc "Return the zero two dimensional vector #<0,0>"}}, get-x {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :line 197, :column 7, :end-line 197, :end-column 12, :arglists (quote ([v]))}, :name infinitelives.utils.vec2/get-x, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :end-column 12, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 197, :end-line 197, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, truncate {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :line 187, :column 7, :end-line 187, :end-column 15, :arglists (quote ([v scalar]))}, :name infinitelives.utils.vec2/truncate, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :end-column 15, :method-params ([v scalar]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 187, :end-line 187, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v scalar]))}, *almost-delta* {:name infinitelives.utils.vec2/*almost-delta*, :file "target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :line 7, :column 1, :end-line 9, :end-column 17, :dynamic true, :doc "The fuzzy zone size for the almost comparitor", :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :line 9, :column 3, :end-line 9, :end-column 17, :dynamic true, :doc "The fuzzy zone size for the almost comparitor"}}, random-unit {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :line 136, :column 7, :end-line 136, :end-column 18, :arglists (quote ([])), :doc "Return a vector pointing in a random direction, but of exactly unit\n  length"}, :name infinitelives.utils.vec2/random-unit, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 136, :end-line 136, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Return a vector pointing in a random direction, but of exactly unit\n  length"}, sub {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :line 78, :column 7, :end-line 78, :end-column 10, :arglists (quote ([v] [v0 v1])), :doc "Passed one arg, returns a vector that is equal and\n  opposite to v, 180 degrees around. Passed two args,\n  returns a vector that is equal to v0 - v1", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([v] [v0 v1]), :arglists ([v] [v0 v1]), :arglists-meta (nil nil)}}, :name infinitelives.utils.vec2/sub, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :end-column 10, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([v] [v0 v1]), :arglists ([v] [v0 v1]), :arglists-meta (nil nil)}, :method-params ([v] [v0 v1]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 2, :fn-var true, :arglists ([v] [v0 v1]), :doc "Passed one arg, returns a vector that is equal and\n  opposite to v, 180 degrees around. Passed two args,\n  returns a vector that is equal to v0 - v1"}, unit {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :line 102, :column 7, :end-line 102, :end-column 11, :arglists (quote ([v])), :doc "Returns a unit vector that points in the same direction as v"}, :name infinitelives.utils.vec2/unit, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :end-column 11, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v])), :doc "Returns a unit vector that points in the same direction as v"}, scale {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :line 92, :column 7, :end-line 92, :end-column 12, :arglists (quote ([v scalar])), :doc "Returns a vector that is v, multiplied by the scalar."}, :name infinitelives.utils.vec2/scale, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :end-column 12, :method-params ([v scalar]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 92, :end-line 92, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v scalar])), :doc "Returns a vector that is v, multiplied by the scalar."}, distance-squared {:name infinitelives.utils.vec2/distance-squared, :file "target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :line 41, :column 1, :end-line 45, :end-column 19, :arglist (quote ([v0 v1])), :doc "Return the distance squared between the tip of v0 and the tip of v1", :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :line 45, :column 3, :end-line 45, :end-column 19, :arglist (quote ([v0 v1])), :doc "Return the distance squared between the tip of v0 and the tip of v1"}}, rotated-pos? {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :line 211, :column 7, :end-line 211, :end-column 19, :arglists (quote ([v1 v2])), :doc "return true if the second vector is angled as if rotated to the\n  positive side of the first vector. Good for finding out which side\n  of something another thing is on. In a maths axis (+ve y), 'pos' is\n  to the left of v1. On a screen axis, 'pos' is to the right of v1."}, :name infinitelives.utils.vec2/rotated-pos?, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :end-column 19, :method-params ([v1 v2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 211, :end-line 211, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v1 v2])), :doc "return true if the second vector is angled as if rotated to the\n  positive side of the first vector. Good for finding out which side\n  of something another thing is on. In a maths axis (+ve y), 'pos' is\n  to the left of v1. On a screen axis, 'pos' is to the right of v1."}, scale-div {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :line 97, :column 7, :end-line 97, :end-column 16, :arglists (quote ([v scalar])), :doc "Returns a vector that is v, divided by the scalar."}, :name infinitelives.utils.vec2/scale-div, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :end-column 16, :method-params ([v scalar]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 97, :end-line 97, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v scalar])), :doc "Returns a vector that is v, divided by the scalar."}, magnitude {:name infinitelives.utils.vec2/magnitude, :file "target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :line 26, :column 1, :end-line 29, :end-column 12, :arglist (quote ([v])), :doc "Return the length of vector v", :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :line 29, :column 3, :end-line 29, :end-column 12, :arglist (quote ([v])), :doc "Return the length of vector v"}}, equals {:name infinitelives.utils.vec2/equals, :file "target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :line 47, :column 1, :end-line 51, :end-column 9, :arglist (quote ([v0 v1])), :doc "Returns true is both v0 and v1 point in the same direction\n     and are of the same length", :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :line 51, :column 3, :end-line 51, :end-column 9, :arglist (quote ([v0 v1])), :doc "Returns true is both v0 and v1 point in the same direction\n     and are of the same length"}}, lerp {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :line 153, :column 7, :end-line 153, :end-column 11, :arglists (quote ([v0 v1 f])), :doc "linearly interperet a vector between v0 and v1. f is the factor\n  along the interpolation. f=0 is v0. f=1 is v1. f can extend outside\n  0 and 1"}, :name infinitelives.utils.vec2/lerp, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :end-column 11, :method-params ([v0 v1 f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 153, :end-line 153, :max-fixed-arity 3, :fn-var true, :arglists (quote ([v0 v1 f])), :doc "linearly interperet a vector between v0 and v1. f is the factor\n  along the interpolation. f=0 is v0. f=1 is v1. f can extend outside\n  0 and 1"}, vec2 {:name infinitelives.utils.vec2/vec2, :file "target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :line 11, :column 1, :end-line 14, :end-column 7, :arglist (quote ([x y])), :doc "Create a two dimensional vector #<x,y>", :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :line 14, :column 3, :end-line 14, :end-column 7, :arglist (quote ([x y])), :doc "Create a two dimensional vector #<x,y>"}}, angle-between {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :line 203, :column 7, :end-line 203, :end-column 20, :arglists (quote ([v1 v2])), :doc "Placing the tails of the two vectors together,\nreturn the angle between them in radians"}, :name infinitelives.utils.vec2/angle-between, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :end-column 20, :method-params ([v1 v2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 203, :end-line 203, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v1 v2])), :doc "Placing the tails of the two vectors together,\nreturn the angle between them in radians"}, abs {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :line 107, :column 7, :end-line 107, :end-column 10, :arglists (quote ([v])), :doc "Returns a vector that is a flipped and mirrored\n  version of v, such that it appears in the positive quadrant"}, :name infinitelives.utils.vec2/abs, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :end-column 10, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v])), :doc "Returns a vector that is a flipped and mirrored\n  version of v, such that it appears in the positive quadrant"}, get-y {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :line 200, :column 7, :end-line 200, :end-column 12, :arglists (quote ([v]))}, :name infinitelives.utils.vec2/get-y, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :end-column 12, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 200, :end-line 200, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, random {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :line 144, :column 7, :end-line 144, :end-column 13, :arglists (quote ([])), :doc "return a random vector that fits entirely in the unit circle, that\n  is, whose length is always less than or equal to one."}, :name infinitelives.utils.vec2/random, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 144, :end-line 144, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "return a random vector that fits entirely in the unit circle, that\n  is, whose length is always less than or equal to one."}, rotate {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :line 119, :column 7, :end-line 119, :end-column 13, :arglists (quote ([v ang])), :doc "return a vector identical to v but rotated ang radians. On a maths\n  axis (+ve y points up) +ve ang rotation is anticlockwise. On a\n  screen axis (+ve y points down) +ve ang rotation is clockwise."}, :name infinitelives.utils.vec2/rotate, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :end-column 13, :method-params ([v ang]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 119, :end-line 119, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v ang])), :doc "return a vector identical to v but rotated ang radians. On a maths\n  axis (+ve y points up) +ve ang rotation is anticlockwise. On a\n  screen axis (+ve y points down) +ve ang rotation is clockwise."}, magnitude-squared {:name infinitelives.utils.vec2/magnitude-squared, :file "target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :line 31, :column 1, :end-line 34, :end-column 20, :arglist (quote ([v])), :doc "Return the length squared of vector v", :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/vec2.cljs", :line 34, :column 3, :end-line 34, :end-column 20, :arglist (quote ([v])), :doc "Return the length squared of vector v"}}}}