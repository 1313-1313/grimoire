;; Analyzed by ClojureScript 1.7.228
{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name infinitelives.utils.events, :imports nil, :requires {cljs.core.async cljs.core.async}, :uses {timeout cljs.core.async, <! cljs.core.async, close! cljs.core.async, chan cljs.core.async, >! cljs.core.async, alts! cljs.core.async, put! cljs.core.async}, :defs {*resize-chans* {:name infinitelives.utils.events/*resize-chans*, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 258, :column 1, :end-line 258, :end-column 20, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 258, :column 6, :end-line 258, :end-column 20}}, handle-keyup-event {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 129, :column 7, :end-line 129, :end-column 25, :arglists (quote ([ev])), :doc "the basic event handler for key up events. Takes the keycode\n  and removes it as a key from the key-state dictionary"}, :name infinitelives.utils.events/handle-keyup-event, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :end-column 25, :method-params ([ev]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 129, :end-line 129, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ev])), :doc "the basic event handler for key up events. Takes the keycode\n  and removes it as a key from the key-state dictionary"}, install-frame-handler! {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 303, :column 7, :end-line 303, :end-column 29, :arglists (quote ([])), :doc "install the frame callback to send frame chan messages"}, :name infinitelives.utils.events/install-frame-handler!, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :end-column 29, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 303, :end-line 303, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "install the frame callback to send frame chan messages"}, del-resize-chan {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 265, :column 7, :end-line 265, :end-column 22, :arglists (quote ([c]))}, :name infinitelives.utils.events/del-resize-chan, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :end-column 22, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 265, :end-line 265, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, request-animation-frame {:name infinitelives.utils.events/request-animation-frame, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 206, :column 1, :end-line 209, :end-column 26, :arglist (quote ([callback])), :doc "schedules the passed in callback to be fired once, next animation frame.", :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 209, :column 3, :end-line 209, :end-column 26, :arglist (quote ([callback])), :doc "schedules the passed in callback to be fired once, next animation frame."}}, new-resize-chan {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 260, :column 7, :end-line 260, :end-column 22, :arglists (quote ([]))}, :name infinitelives.utils.events/new-resize-chan, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 260, :end-line 260, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, key-state {:name infinitelives.utils.events/key-state, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 17, :column 1, :end-line 17, :end-column 15, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 17, :column 6, :end-line 17, :end-column 15}}, del-frame-chan! {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 293, :column 7, :end-line 293, :end-column 22, :arglists (quote ([c]))}, :name infinitelives.utils.events/del-frame-chan!, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :end-column 22, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 293, :end-line 293, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, allow-key-defaults {:name infinitelives.utils.events/allow-key-defaults, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 31, :column 1, :end-line 31, :end-column 24, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 31, :column 6, :end-line 31, :end-column 24}}, *frame-chans* {:name infinitelives.utils.events/*frame-chans*, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 286, :column 1, :end-line 286, :end-column 19, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 286, :column 6, :end-line 286, :end-column 19}}, handle-keydown-event {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 112, :column 7, :end-line 112, :end-column 27, :arglists (quote ([ev])), :doc "the base event handler for key down events. Takes the keycode\n  and sets that key in the key-state dictionary to true"}, :name infinitelives.utils.events/handle-keydown-event, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :end-column 27, :method-params ([ev]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 112, :end-line 112, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ev])), :doc "the base event handler for key down events. Takes the keycode\n  and sets that key in the key-state dictionary to true"}, install-gamepad-listener {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 369, :column 7, :end-line 369, :end-column 31, :arglists (quote ([callback]))}, :name infinitelives.utils.events/install-gamepad-listener, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :end-column 31, :method-params ([callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 369, :end-line 369, :max-fixed-arity 1, :fn-var true, :arglists (quote ([callback]))}, clear-resize-chans! {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 268, :column 7, :end-line 268, :end-column 26, :arglists (quote ([]))}, :name infinitelives.utils.events/clear-resize-chans!, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 268, :end-line 268, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, key-codes {:name infinitelives.utils.events/key-codes, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 39, :column 1, :end-line 56, :end-column 12, :doc "A hashmap with a variety of keys (strings, keywords).\nmapping to browser key codes. Use the is-pressed? function to test\nkeys directly.\n\nKeycodes can be any string of length 1 representing a key (lowercase).\nKeycodes can also be any of the following keywords\n\n:backspace :tab :enter :shift :control :alt :pause :capslock :esc :space\n:pageup :pagedown :end :home :left :up :right :down :insert :delete :f1\n:f2 :f3 :f4 :f5 :f6 :f7 :f8 :f9 :f10 :f11 :f12 :numlock :scrolllock :comma\n:. :/ :backtick :squareleft :backslash :squareright :quote\n\nor any of the single alphanumeric lowercase characters as keywords\n\neg.\n:w :a :s :d :1 :5 etc.", :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 56, :column 3, :end-line 56, :end-column 12, :doc "A hashmap with a variety of keys (strings, keywords).\nmapping to browser key codes. Use the is-pressed? function to test\nkeys directly.\n\nKeycodes can be any string of length 1 representing a key (lowercase).\nKeycodes can also be any of the following keywords\n\n:backspace :tab :enter :shift :control :alt :pause :capslock :esc :space\n:pageup :pagedown :end :home :left :up :right :down :insert :delete :f1\n:f2 :f3 :f4 :f5 :f6 :f7 :f8 :f9 :f10 :f11 :f12 :numlock :scrolllock :comma\n:. :/ :backtick :squareleft :backslash :squareright :quote\n\nor any of the single alphanumeric lowercase characters as keywords\n\neg.\n:w :a :s :d :1 :5 etc."}}, ascii {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 33, :column 7, :end-line 33, :end-column 12, :arglists (quote ([c])), :doc "A clojurescript version of ascii value of. javascript doesn't have\n  a char type, but uses a string of length 1 to represent"}, :name infinitelives.utils.events/ascii, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :end-column 12, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c])), :doc "A clojurescript version of ascii value of. javascript doesn't have\n  a char type, but uses a string of length 1 to represent"}, !gamepad-connected-callbacks {:name infinitelives.utils.events/!gamepad-connected-callbacks, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 330, :column 1, :end-line 330, :end-column 34, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 330, :column 6, :end-line 330, :end-column 34}}, any-pressed? {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 172, :column 7, :end-line 172, :end-column 19, :arglists (quote ([])), :doc "Is any key on the keyboard pressed?"}, :name infinitelives.utils.events/any-pressed?, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 172, :end-line 172, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Is any key on the keyboard pressed?"}, key-config {:name infinitelives.utils.events/key-config, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 24, :column 1, :end-line 24, :end-column 20, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 24, :column 10, :end-line 24, :end-column 20}}, initiate-gamepad-callbacks {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 332, :column 7, :end-line 332, :end-column 33, :arglists (quote ([gamepad-index gamepad-data]))}, :name infinitelives.utils.events/initiate-gamepad-callbacks, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :end-column 33, :method-params ([gamepad-index gamepad-data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 332, :end-line 332, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gamepad-index gamepad-data]))}, frame-event-chan-handler {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 299, :column 7, :end-line 299, :end-column 31, :arglists (quote ([ev]))}, :name infinitelives.utils.events/frame-event-chan-handler, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :end-column 31, :method-params ([ev]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 299, :end-line 299, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ev]))}, wait-time {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 239, :column 7, :end-line 239, :end-column 16, :arglists (quote ([delay])), :doc "returns a channel which closes when a certain amount of\n  time in milliseconds has passed, but determines that time by counting\n  the requestAnimationFrame callbacks, so that when tab focus is lost,\n  the callback, and thus this wait is suspended.\n\n  ```\n  ;; wait one seconds worth of frames\n  (<! (wait-time 1000))\n  ```"}, :name infinitelives.utils.events/wait-time, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :end-column 16, :method-params ([delay]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 239, :end-line 239, :max-fixed-arity 1, :fn-var true, :arglists (quote ([delay])), :doc "returns a channel which closes when a certain amount of\n  time in milliseconds has passed, but determines that time by counting\n  the requestAnimationFrame callbacks, so that when tab focus is lost,\n  the callback, and thus this wait is suspended.\n\n  ```\n  ;; wait one seconds worth of frames\n  (<! (wait-time 1000))\n  ```"}, *devtools-passthrough* {:name infinitelives.utils.events/*devtools-passthrough*, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 11, :column 1, :end-line 11, :end-column 42, :dynamic true, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 11, :column 20, :end-line 11, :end-column 42, :dynamic true}}, wait-frames {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 224, :column 7, :end-line 224, :end-column 18, :arglists (quote ([frames])), :doc "returns a channel which closes when a certain number\n  of frames have passed. eg\n\n  ```\n  ;; wait 10 frames\n  (<! (wait-frames 10))\n  ```"}, :name infinitelives.utils.events/wait-frames, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :end-column 18, :method-params ([frames]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 224, :end-line 224, :max-fixed-arity 1, :fn-var true, :arglists (quote ([frames])), :doc "returns a channel which closes when a certain number\n  of frames have passed. eg\n\n  ```\n  ;; wait 10 frames\n  (<! (wait-frames 10))\n  ```"}, get-gamepads {:name infinitelives.utils.events/get-gamepads, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 324, :column 1, :end-line 324, :end-column 18, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 324, :column 6, :end-line 324, :end-column 18}}, resize-event-chan-handler {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 271, :column 7, :end-line 271, :end-column 32, :arglists (quote ([ev]))}, :name infinitelives.utils.events/resize-event-chan-handler, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :end-column 32, :method-params ([ev]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 271, :end-line 271, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ev]))}, install-gamepad-handler! {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 348, :column 7, :end-line 348, :end-column 31, :arglists (quote ([]))}, :name infinitelives.utils.events/install-gamepad-handler!, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :end-column 31, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 348, :end-line 348, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, install-key-handler! {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 140, :column 7, :end-line 140, :end-column 27, :arglists (quote ([])), :doc "install the keyup and keydown event handlers"}, :name infinitelives.utils.events/install-key-handler!, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 140, :end-line 140, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "install the keyup and keydown event handlers"}, prevent-key-defaults {:name infinitelives.utils.events/prevent-key-defaults, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 30, :column 1, :end-line 30, :end-column 26, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 30, :column 6, :end-line 30, :end-column 26}}, gamepad-handler-installed {:name infinitelives.utils.events/gamepad-handler-installed, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 342, :column 1, :end-line 342, :end-column 31, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 342, :column 6, :end-line 342, :end-column 31}}, set-prevent-key-defaults {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 27, :column 7, :end-line 27, :end-column 31, :arglists (quote ([b]))}, :name infinitelives.utils.events/set-prevent-key-defaults, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :end-column 31, :method-params ([b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([b]))}, get-gamepad-event-index {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 345, :column 7, :end-line 345, :end-column 30, :arglists (quote ([ev]))}, :name infinitelives.utils.events/get-gamepad-event-index, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :end-column 30, :method-params ([ev]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 345, :end-line 345, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ev]))}, fallback-fps {:name infinitelives.utils.events/fallback-fps, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 180, :column 1, :end-line 180, :end-column 18, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 180, :column 6, :end-line 180, :end-column 18}}, next-frame {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 211, :column 7, :end-line 211, :end-column 17, :arglists (quote ([])), :doc "returns a single use channel which closes on next frame callback.\n  pulling from it waits exactly one frame. eg\n\n  ```\n  ;; wait one frame\n  (<! (next-frame))\n  ```"}, :name infinitelives.utils.events/next-frame, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 211, :end-line 211, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "returns a single use channel which closes on next frame callback.\n  pulling from it waits exactly one frame. eg\n\n  ```\n  ;; wait one frame\n  (<! (next-frame))\n  ```"}, install-resize-handler! {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 275, :column 7, :end-line 275, :end-column 30, :arglists (quote ([])), :doc "install the resize callback to resize the main canvas renderer"}, :name infinitelives.utils.events/install-resize-handler!, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :end-column 30, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 275, :end-line 275, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "install the resize callback to resize the main canvas renderer"}, set-gamepad-atom! {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 337, :column 7, :end-line 337, :end-column 24, :arglists (quote ([gamepad-index value]))}, :name infinitelives.utils.events/set-gamepad-atom!, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :end-column 24, :method-params ([gamepad-index value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 337, :end-line 337, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gamepad-index value]))}, clear-frame-chans! {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 296, :column 7, :end-line 296, :end-column 25, :arglists (quote ([]))}, :name infinitelives.utils.events/clear-frame-chans!, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 296, :end-line 296, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, is-pressed? {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 146, :column 7, :end-line 146, :end-column 18, :arglists (quote ([code])), :doc "returns true if the key is pressently down. code is a keyword,\n  or a string of length 1. Examples:\n\n  ```\n  ;; test if keys are down by keyword\n  (is-pressed? :backspace)\n  (is-pressed? :f10)\n  (is-pressed? :left)\n  (is-pressed? :space)\n  (is-pressed? :w)\n  (is-pressed? :a)\n\n  ;; test if keys are down by string\n  (is-pressed? \" \")\n  (is-pressed? \"w\")\n  (is-pressed? \"a\")\n  (is-pressed? \"d\")\n  (is-pressed? \"s\")\n  ```\n\n  See key-codes for a list of keyword keys.\n"}, :name infinitelives.utils.events/is-pressed?, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :end-column 18, :method-params ([code]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 146, :end-line 146, :max-fixed-arity 1, :fn-var true, :arglists (quote ([code])), :doc "returns true if the key is pressently down. code is a keyword,\n  or a string of length 1. Examples:\n\n  ```\n  ;; test if keys are down by keyword\n  (is-pressed? :backspace)\n  (is-pressed? :f10)\n  (is-pressed? :left)\n  (is-pressed? :space)\n  (is-pressed? :w)\n  (is-pressed? :a)\n\n  ;; test if keys are down by string\n  (is-pressed? \" \")\n  (is-pressed? \"w\")\n  (is-pressed? \"a\")\n  (is-pressed? \"d\")\n  (is-pressed? \"s\")\n  ```\n\n  See key-codes for a list of keyword keys.\n"}, make-request-animation-frame {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 182, :column 7, :end-line 182, :end-column 35, :arglists (quote ([])), :doc "compose a function that is the r-a-f func. returns a function. This returned function takes a callback and ensures\n  its called next frame"}, :name infinitelives.utils.events/make-request-animation-frame, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :end-column 35, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 182, :end-line 182, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "compose a function that is the r-a-f func. returns a function. This returned function takes a callback and ensures\n  its called next frame"}, new-frame-chan {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 288, :column 7, :end-line 288, :end-column 21, :arglists (quote ([]))}, :name infinitelives.utils.events/new-frame-chan, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 288, :end-line 288, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, !gamepads {:name infinitelives.utils.events/!gamepads, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 327, :column 1, :end-line 327, :end-column 15, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 327, :column 6, :end-line 327, :end-column 15}}, make-get-gamepads {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :line 313, :column 7, :end-line 313, :end-column 24, :arglists (quote ([]))}, :name infinitelives.utils.events/make-get-gamepads, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/events.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 313, :end-line 313, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:shift :down :space :home :insert :f8 :f1 :f10 :else :alt :esc :default :comma :numlock :f5 :pageup :recur :delete :/ :up :enter :backtick :f11 :. :f3 :quote :f2 :control :squareleft :scrolllock :f12 :capslock :right :pagedown :pause :backspace :f7 :f9 :end :tab :prevent-defaults :f6 :f4 :backslash :left :squareright}, :order [:prevent-defaults :shift :down :space :home :insert :f8 :f1 :f10 :alt :esc :comma :numlock :f5 :pageup :delete :/ :up :enter :backtick :f11 :. :f3 :quote :f2 :control :squareleft :scrolllock :f12 :capslock :right :pagedown :pause :backspace :f7 :f9 :end :tab :f6 :f4 :backslash :left :squareright :else :recur :default]}, :doc "Browser events"}