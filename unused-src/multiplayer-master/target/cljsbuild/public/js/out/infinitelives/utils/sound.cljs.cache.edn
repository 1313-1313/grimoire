;; Analyzed by ClojureScript 1.7.228
{:name infinitelives.utils.sound, :doc nil, :excludes #{}, :use-macros {go cljs.core.async.macros}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :uses {timeout cljs.core.async, <! cljs.core.async, close! cljs.core.async, chan cljs.core.async, >! cljs.core.async, alts! cljs.core.async, put! cljs.core.async}, :requires {cljs.core.async cljs.core.async, string infinitelives.utils.string, infinitelives.utils.string infinitelives.utils.string}, :imports nil, :defs {audio-context {:name infinitelives.utils.sound/audio-context, :file "target/cljsbuild/public/js/out/infinitelives/utils/sound.cljs", :line 8, :column 1, :end-line 8, :end-column 19, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/sound.cljs", :line 8, :column 6, :end-line 8, :end-column 19}}, default-gain {:name infinitelives.utils.sound/default-gain, :file "target/cljsbuild/public/js/out/infinitelives/utils/sound.cljs", :line 10, :column 1, :end-line 10, :end-column 18, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/sound.cljs", :line 10, :column 6, :end-line 10, :end-column 18}}, !sounds {:name infinitelives.utils.sound/!sounds, :file "target/cljsbuild/public/js/out/infinitelives/utils/sound.cljs", :line 13, :column 1, :end-line 13, :end-column 17, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/sound.cljs", :line 13, :column 10, :end-line 13, :end-column 17}}, load-sound {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/sound.cljs", :line 15, :column 7, :end-line 15, :end-column 17, :arglists (quote ([url])), :doc "Initiates a download of the url as a sound. Returns a channel.\n  When loaded and decoded, sends a decoded buffer object down the\n  channel. This buffer can be used directly as a sound source"}, :name infinitelives.utils.sound/load-sound, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/sound.cljs", :end-column 17, :method-params ([url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([url])), :doc "Initiates a download of the url as a sound. Returns a channel.\n  When loaded and decoded, sends a decoded buffer object down the\n  channel. This buffer can be used directly as a sound source"}, register-sound! {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/sound.cljs", :line 28, :column 7, :end-line 28, :end-column 22, :arglists (quote ([url obj]))}, :name infinitelives.utils.sound/register-sound!, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/sound.cljs", :end-column 22, :method-params ([url obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 2, :fn-var true, :arglists (quote ([url obj]))}, get-sound {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/sound.cljs", :line 35, :column 7, :end-line 35, :end-column 16, :arglists (quote ([key]))}, :name infinitelives.utils.sound/get-sound, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/sound.cljs", :end-column 16, :method-params ([key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists (quote ([key]))}, play-sound {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/sound.cljs", :line 38, :column 7, :end-line 38, :end-column 17, :arglists (quote ([buff g & [loop-flag]] [buff])), :doc "pass this a buffer, and an optional gain parameter, and the\n  sound will be played to the speakers", :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([buff]), :arglists ([buff g & [loop-flag]] [buff]), :arglists-meta (nil nil)}}, :name infinitelives.utils.sound/play-sound, :variadic true, :file "target/cljsbuild/public/js/out/infinitelives/utils/sound.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([buff]), :arglists ([buff g & [loop-flag]] [buff]), :arglists-meta (nil nil)}, :method-params ([buff]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 2, :fn-var true, :arglists ([buff g & [loop-flag]] [buff]), :doc "pass this a buffer, and an optional gain parameter, and the\n  sound will be played to the speakers"}}}