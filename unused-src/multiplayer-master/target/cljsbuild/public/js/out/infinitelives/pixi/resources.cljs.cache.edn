;; Analyzed by ClojureScript 1.7.228
{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name infinitelives.pixi.resources, :imports nil, :requires {infinitelives.utils.sound infinitelives.utils.sound, sound infinitelives.utils.sound, cljs.core.async cljs.core.async, infinitelives.utils.events infinitelives.utils.events, events infinitelives.utils.events, infinitelives.utils.string infinitelives.utils.string, string infinitelives.utils.string, sprite infinitelives.pixi.sprite, infinitelives.utils.console infinitelives.utils.console, cljsjs.pixi cljsjs.pixi, infinitelives.pixi.sprite infinitelives.pixi.sprite}, :uses {timeout cljs.core.async, log infinitelives.utils.console, <! cljs.core.async, close! cljs.core.async, chan cljs.core.async, put! cljs.core.async}, :defs {load-sound {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/pixi/resources.cljs", :line 123, :column 8, :end-line 123, :end-column 18, :private true, :arglists (quote ([url finished]))}, :private true, :name infinitelives.pixi.resources/load-sound, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/pixi/resources.cljs", :end-column 18, :method-params ([url finished]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 123, :end-line 123, :max-fixed-arity 2, :fn-var true, :arglists (quote ([url finished]))}, load-image {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/pixi/resources.cljs", :line 115, :column 8, :end-line 115, :end-column 18, :private true, :arglists (quote ([url finished]))}, :private true, :name infinitelives.pixi.resources/load-image, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/pixi/resources.cljs", :end-column 18, :method-params ([url finished]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 2, :fn-var true, :arglists (quote ([url finished]))}, fadein {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/pixi/resources.cljs", :line 177, :column 7, :end-line 177, :end-column 13, :arglists (quote ([spr & {:keys [duration start end], :or {duration 1, start 0, end 1}}])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(spr {:keys [duration start end], :or {duration 1, start 0, end 1}})], :arglists ([spr & {:keys [duration start end], :or {duration 1, start 0, end 1}}]), :arglists-meta (nil)}}, :name infinitelives.pixi.resources/fadein, :variadic true, :file "target/cljsbuild/public/js/out/infinitelives/pixi/resources.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(spr {:keys [duration start end], :or {duration 1, start 0, end 1}})], :arglists ([spr & {:keys [duration start end], :or {duration 1, start 0, end 1}}]), :arglists-meta (nil)}, :method-params [(spr {:keys [duration start end], :or {duration 1, start 0, end 1}})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 177, :end-line 177, :max-fixed-arity 1, :fn-var true, :arglists ([spr & {:keys [duration start end], :or {duration 1, start 0, end 1}}])}, add-prog-bar {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/pixi/resources.cljs", :line 70, :column 7, :end-line 70, :end-column 19, :arglists (quote ([stage options]))}, :name infinitelives.pixi.resources/add-prog-bar, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/pixi/resources.cljs", :end-column 19, :method-params ([stage options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 2, :fn-var true, :arglists (quote ([stage options]))}, load-urls {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/pixi/resources.cljs", :line 127, :column 7, :end-line 127, :end-column 16, :arglists (quote ([urls progress-bar & options])), :doc "loads each url in the passed in list as an image. Updates the progress\nas it goes with\n  a percentage and a thumbnail. Once complete, displays all the images\nfullsize.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(urls progress-bar options)], :arglists ([urls progress-bar & options]), :arglists-meta (nil)}}, :name infinitelives.pixi.resources/load-urls, :variadic true, :file "target/cljsbuild/public/js/out/infinitelives/pixi/resources.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(urls progress-bar options)], :arglists ([urls progress-bar & options]), :arglists-meta (nil)}, :method-params [(urls progress-bar options)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 127, :end-line 127, :max-fixed-arity 2, :fn-var true, :arglists ([urls progress-bar & options]), :doc "loads each url in the passed in list as an image. Updates the progress\nas it goes with\n  a percentage and a thumbnail. Once complete, displays all the images\nfullsize."}, load-resources {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/pixi/resources.cljs", :line 186, :column 7, :end-line 186, :end-column 21, :arglists (quote ([canvas layer urls & {:keys [fade-in fade-out], :or {fade-in 0.5, fade-out 0.5}, :as options}])), :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(canvas layer urls {:keys [fade-in fade-out], :or {fade-in 0.5, fade-out 0.5}, :as options})], :arglists ([canvas layer urls & {:keys [fade-in fade-out], :or {fade-in 0.5, fade-out 0.5}, :as options}]), :arglists-meta (nil)}}, :name infinitelives.pixi.resources/load-resources, :variadic true, :file "target/cljsbuild/public/js/out/infinitelives/pixi/resources.cljs", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(canvas layer urls {:keys [fade-in fade-out], :or {fade-in 0.5, fade-out 0.5}, :as options})], :arglists ([canvas layer urls & {:keys [fade-in fade-out], :or {fade-in 0.5, fade-out 0.5}, :as options}]), :arglists-meta (nil)}, :method-params [(canvas layer urls {:keys [fade-in fade-out], :or {fade-in 0.5, fade-out 0.5}, :as options})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 186, :end-line 186, :max-fixed-arity 3, :fn-var true, :arglists ([canvas layer urls & {:keys [fade-in fade-out], :or {fade-in 0.5, fade-out 0.5}, :as options}])}, get-texture {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/pixi/resources.cljs", :line 76, :column 7, :end-line 76, :end-column 18, :arglists (quote ([key scale]))}, :name infinitelives.pixi.resources/get-texture, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/pixi/resources.cljs", :end-column 18, :method-params ([key scale]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 2, :fn-var true, :arglists (quote ([key scale]))}, fadeout {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/pixi/resources.cljs", :line 166, :column 7, :end-line 166, :end-column 14, :arglists (quote ([spr & {:keys [duration start end], :or {duration 1, start nil, end 0}}])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(spr {:keys [duration start end], :or {duration 1, start nil, end 0}})], :arglists ([spr & {:keys [duration start end], :or {duration 1, start nil, end 0}}]), :arglists-meta (nil)}}, :name infinitelives.pixi.resources/fadeout, :variadic true, :file "target/cljsbuild/public/js/out/infinitelives/pixi/resources.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(spr {:keys [duration start end], :or {duration 1, start nil, end 0}})], :arglists ([spr & {:keys [duration start end], :or {duration 1, start nil, end 0}}]), :arglists-meta (nil)}, :method-params [(spr {:keys [duration start end], :or {duration 1, start nil, end 0}})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 166, :end-line 166, :max-fixed-arity 1, :fn-var true, :arglists ([spr & {:keys [duration start end], :or {duration 1, start nil, end 0}}])}, identify-file {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/pixi/resources.cljs", :line 97, :column 8, :end-line 97, :end-column 21, :private true, :arglists (quote ([url]))}, :private true, :name infinitelives.pixi.resources/identify-file, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/pixi/resources.cljs", :end-column 21, :method-params ([url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 97, :end-line 97, :max-fixed-arity 1, :fn-var true, :arglists (quote ([url]))}, register-texture! {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/pixi/resources.cljs", :line 80, :column 8, :end-line 80, :end-column 25, :private true, :arglists (quote ([url img]))}, :private true, :name infinitelives.pixi.resources/register-texture!, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/pixi/resources.cljs", :end-column 25, :method-params ([url img]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 80, :end-line 80, :max-fixed-arity 2, :fn-var true, :arglists (quote ([url img]))}, !textures {:name infinitelives.pixi.resources/!textures, :file "target/cljsbuild/public/js/out/infinitelives/pixi/resources.cljs", :line 12, :column 1, :end-line 12, :end-column 19, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/pixi/resources.cljs", :line 12, :column 10, :end-line 12, :end-column 19}}, register {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/pixi/resources.cljs", :line 103, :column 7, :end-line 103, :end-column 15, :arglists (quote ([url obj]))}, :name infinitelives.pixi.resources/register, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/pixi/resources.cljs", :end-column 15, :method-params ([url obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 103, :end-line 103, :max-fixed-arity 2, :fn-var true, :arglists (quote ([url obj]))}, progress-texture {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/pixi/resources.cljs", :line 14, :column 7, :end-line 14, :end-column 23, :arglists (quote ([fraction {:keys [empty-colour full-colour border-colour border-width draw-border width height highlight highlight-offset highlight-width lowlight lowlight-offset lowlight-width], :or {full-colour 8421504, lowlight-offset 0, draw-border false, highlight-offset 0, height 40, width 600, lowlight-width 1, border-colour 16777215, border-width 2, empty-colour 0, highlight-width 1}, :as options}])), :doc "Draws an empty box that can serve as a default progress bar for preloading images"}, :name infinitelives.pixi.resources/progress-texture, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/pixi/resources.cljs", :end-column 23, :method-params ([fraction p__33161]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 2, :fn-var true, :arglists (quote ([fraction {:keys [empty-colour full-colour border-colour border-width draw-border width height highlight highlight-offset highlight-width lowlight lowlight-offset lowlight-width], :or {full-colour 8421504, lowlight-offset 0, draw-border false, highlight-offset 0, height 40, width 600, lowlight-width 1, border-colour 16777215, border-width 2, empty-colour 0, highlight-width 1}, :as options}])), :doc "Draws an empty box that can serve as a default progress bar for preloading images"}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:sound :nearest :else :unknown :highlight :fade-out :default :width :start :lowlight-width :recur :duration :border-width :border-colour :layer :debug-delay :empty-colour :highlight-width :image :lowlight :linear :lowlight-offset :draw-border :end :full-colour :highlight-offset :height :fade-in}, :order [:full-colour :lowlight-offset :draw-border :highlight-offset :height :highlight :width :lowlight-width :border-colour :border-width :empty-colour :lowlight :highlight-width :linear :nearest :sound :image :unknown :default :recur :else :debug-delay :duration :start :end :fade-in :fade-out :layer]}, :doc nil}