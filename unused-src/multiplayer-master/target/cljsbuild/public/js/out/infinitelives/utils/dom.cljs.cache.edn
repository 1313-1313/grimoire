;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name infinitelives.utils.dom, :imports nil, :requires nil, :uses nil, :defs {remove! {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/dom.cljs", :line 33, :column 7, :end-line 33, :end-column 14, :arglists (quote ([elem] [p elem])), :doc "Remove `elem` from `parent`, return `parent`", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([elem] [p elem]), :arglists ([elem] [p elem]), :arglists-meta (nil nil)}}, :name infinitelives.utils.dom/remove!, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/dom.cljs", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([elem] [p elem]), :arglists ([elem] [p elem]), :arglists-meta (nil nil)}, :method-params ([elem] [p elem]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 2, :fn-var true, :arglists ([elem] [p elem]), :doc "Remove `elem` from `parent`, return `parent`"}, set-html! {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/dom.cljs", :line 86, :column 7, :end-line 86, :end-column 16, :arglists (quote ([elem html])), :doc "Set the innerHTML of `elem` to `html`"}, :name infinitelives.utils.dom/set-html!, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/dom.cljs", :end-column 16, :method-params ([elem html]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 2, :fn-var true, :arglists (quote ([elem html])), :doc "Set the innerHTML of `elem` to `html`"}, set-style! {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/dom.cljs", :line 17, :column 7, :end-line 17, :end-column 17, :arglists (quote ([elem & kvs])), :doc "Set the style of `elem` using key-value pairs:\n      (set-style! elem :display \"block\" :color \"red\")", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(elem kvs)], :arglists ([elem & kvs]), :arglists-meta (nil)}}, :name infinitelives.utils.dom/set-style!, :variadic true, :file "target/cljsbuild/public/js/out/infinitelives/utils/dom.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(elem kvs)], :arglists ([elem & kvs]), :arglists-meta (nil)}, :method-params [(elem kvs)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists ([elem & kvs]), :doc "Set the style of `elem` using key-value pairs:\n      (set-style! elem :display \"block\" :color \"red\")"}, set-attr! {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/dom.cljs", :line 58, :column 7, :end-line 58, :end-column 16, :arglists (quote ([elem k] [elem k v] [elem k v & kvs])), :doc "Sets dom attributes on and returns `elem`.\n   Attributes without values will be set to their name:\n       (set-attr! elem :disabled)\n   With values, the function takes variadic kv pairs:\n       (set-attr! elem :id \"some-id\"\n                       :name \"some-name\")", :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([elem k] [elem k v]), :arglists ([elem k] [elem k v] [elem k v & kvs]), :arglists-meta (nil nil nil)}}, :name infinitelives.utils.dom/set-attr!, :variadic true, :file "target/cljsbuild/public/js/out/infinitelives/utils/dom.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([elem k] [elem k v]), :arglists ([elem k] [elem k v] [elem k v & kvs]), :arglists-meta (nil nil nil)}, :method-params ([elem k] [elem k v]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 3, :fn-var true, :arglists ([elem k] [elem k v] [elem k v & kvs]), :doc "Sets dom attributes on and returns `elem`.\n   Attributes without values will be set to their name:\n       (set-attr! elem :disabled)\n   With values, the function takes variadic kv pairs:\n       (set-attr! elem :id \"some-id\"\n                       :name \"some-name\")"}, children {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/dom.cljs", :line 14, :column 7, :end-line 14, :end-column 15, :arglists (quote ([elem]))}, :name infinitelives.utils.dom/children, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/dom.cljs", :end-column 15, :method-params ([elem]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([elem]))}, collision-test-by-id {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/dom.cljs", :line 96, :column 7, :end-line 96, :end-column 27, :arglists (quote ([id-a id-b]))}, :name infinitelives.utils.dom/collision-test-by-id, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/dom.cljs", :end-column 27, :method-params ([id-a id-b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id-a id-b]))}, set-text! {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/dom.cljs", :line 78, :column 7, :end-line 78, :end-column 16, :arglists (quote ([elem text])), :doc "Set the textContent of `elem` to `text`, fall back to innerText"}, :name infinitelives.utils.dom/set-text!, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/dom.cljs", :end-column 16, :method-params ([elem text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 2, :fn-var true, :arglists (quote ([elem text])), :doc "Set the textContent of `elem` to `text`, fall back to innerText"}, parent {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/dom.cljs", :line 11, :column 7, :end-line 11, :end-column 13, :arglists (quote ([elem]))}, :name infinitelives.utils.dom/parent, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/dom.cljs", :end-column 13, :method-params ([elem]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([elem]))}, insert-before! {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/dom.cljs", :line 50, :column 7, :end-line 50, :end-column 21, :arglists (quote ([elem other])), :doc "Insert `elem` before `other`, `other` must have a parent"}, :name infinitelives.utils.dom/insert-before!, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/dom.cljs", :end-column 21, :method-params ([elem other]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 2, :fn-var true, :arglists (quote ([elem other])), :doc "Insert `elem` before `other`, `other` must have a parent"}, get-bounds {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/dom.cljs", :line 92, :column 7, :end-line 92, :end-column 17, :arglists (quote ([id]))}, :name infinitelives.utils.dom/get-bounds, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/dom.cljs", :end-column 17, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 92, :end-line 92, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, as-str {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/dom.cljs", :line 3, :column 7, :end-line 3, :end-column 13, :arglists (quote ([s])), :doc "Coerces strings and keywords to strings, while preserving namespace of\n   namespaced keywords"}, :name infinitelives.utils.dom/as-str, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/dom.cljs", :end-column 13, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 3, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Coerces strings and keywords to strings, while preserving namespace of\n   namespaced keywords"}, append! {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/dom.cljs", :line 27, :column 7, :end-line 27, :end-column 14, :arglists (quote ([parent child])), :doc "Append `child` to `parent`"}, :name infinitelives.utils.dom/append!, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/dom.cljs", :end-column 14, :method-params ([parent child]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 2, :fn-var true, :arglists (quote ([parent child])), :doc "Append `child` to `parent`"}, create-element {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/infinitelives/utils/dom.cljs", :line 43, :column 7, :end-line 43, :end-column 21, :arglists (quote ([tag] [tag-ns tag])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([tag] [tag-ns tag]), :arglists ([tag] [tag-ns tag]), :arglists-meta (nil nil)}}, :name infinitelives.utils.dom/create-element, :variadic false, :file "target/cljsbuild/public/js/out/infinitelives/utils/dom.cljs", :end-column 21, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([tag] [tag-ns tag]), :arglists ([tag] [tag-ns tag]), :arglists-meta (nil nil)}, :method-params ([tag] [tag-ns tag]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 2, :fn-var true, :arglists ([tag] [tag-ns tag])}}, :require-macros nil, :cljs.analyzer/constants {:seen #{p kvs even? count}, :order [even? count kvs p]}, :doc nil}