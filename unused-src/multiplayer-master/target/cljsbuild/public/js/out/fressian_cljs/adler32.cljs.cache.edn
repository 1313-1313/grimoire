;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name fressian-cljs.adler32, :imports nil, :requires nil, :uses nil, :defs {*BASE* {:name fressian-cljs.adler32/*BASE*, :file "target/cljsbuild/public/js/out/fressian_cljs/adler32.cljs", :line 3, :column 1, :end-line 3, :end-column 12, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/fressian_cljs/adler32.cljs", :line 3, :column 6, :end-line 3, :end-column 12}}, Adler32Protocol {:meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/fressian_cljs/adler32.cljs", :line 5, :column 14, :end-line 5, :end-column 29, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {update! [[_ b] [_ bs off len]], get-value [[_]], reset [[_]]}}}, :protocol-symbol true, :name fressian-cljs.adler32/Adler32Protocol, :file "target/cljsbuild/public/js/out/fressian_cljs/adler32.cljs", :end-column 29, :column 1, :line 5, :protocol-info {:methods {update! [[_ b] [_ bs off len]], get-value [[_]], reset [[_]]}}, :info nil, :end-line 5, :impls #{fressian-cljs.adler32/Adler32}, :doc nil, :jsdoc ("@interface")}, update! {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/fressian_cljs/adler32.cljs", :line 6, :column 4, :end-line 6, :end-column 11, :protocol fressian-cljs.adler32/Adler32Protocol, :doc nil, :arglists (quote ([_ b] [_ bs off len])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([_ b] [_ bs off len]), :arglists ([_ b] [_ bs off len]), :arglists-meta (nil nil)}}, :protocol fressian-cljs.adler32/Adler32Protocol, :name fressian-cljs.adler32/update!, :variadic false, :file "target/cljsbuild/public/js/out/fressian_cljs/adler32.cljs", :end-column 11, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([_ b] [_ bs off len]), :arglists ([_ b] [_ bs off len]), :arglists-meta (nil nil)}, :method-params ([_ b] [_ bs off len]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 6, :max-fixed-arity 4, :fn-var true, :arglists ([_ b] [_ bs off len]), :doc nil}, get-value {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/fressian_cljs/adler32.cljs", :line 7, :column 4, :end-line 7, :end-column 13, :protocol fressian-cljs.adler32/Adler32Protocol, :doc nil, :arglists (quote ([_]))}, :protocol fressian-cljs.adler32/Adler32Protocol, :name fressian-cljs.adler32/get-value, :variadic false, :file "target/cljsbuild/public/js/out/fressian_cljs/adler32.cljs", :end-column 13, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, reset {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/fressian_cljs/adler32.cljs", :line 8, :column 4, :end-line 8, :end-column 9, :protocol fressian-cljs.adler32/Adler32Protocol, :doc nil, :arglists (quote ([_]))}, :protocol fressian-cljs.adler32/Adler32Protocol, :name fressian-cljs.adler32/reset, :variadic false, :file "target/cljsbuild/public/js/out/fressian_cljs/adler32.cljs", :end-column 9, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, Adler32 {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted fressian-cljs.adler32/Adler32Protocol cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name fressian-cljs.adler32/Adler32, :file "target/cljsbuild/public/js/out/fressian_cljs/adler32.cljs", :end-column 19, :type true, :column 12, :internal-ctor true, :line 10, :record true, :end-line 10, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->Adler32 {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/fressian_cljs/adler32.cljs", :line 10, :column 12, :end-line 10, :end-column 19, :internal-ctor true, :factory :positional, :arglists (quote ([value]))}, :name fressian-cljs.adler32/->Adler32, :variadic false, :file "target/cljsbuild/public/js/out/fressian_cljs/adler32.cljs", :end-column 19, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, map->Adler32 {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/fressian_cljs/adler32.cljs", :line 10, :column 12, :end-line 10, :end-column 19, :internal-ctor true, :factory :map, :arglists (quote ([G__27910]))}, :name fressian-cljs.adler32/map->Adler32, :variadic false, :file "target/cljsbuild/public/js/out/fressian_cljs/adler32.cljs", :end-column 19, :method-params ([G__27910]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__27910]))}, make-adler32 {:protocol-inline nil, :meta {:file "/home/masik/ENVIRONMENT/repositories/viri.me/unused/multiplayer-master/target/cljsbuild/public/js/out/fressian_cljs/adler32.cljs", :line 24, :column 7, :end-line 24, :end-column 19, :arglists (quote ([]))}, :name fressian-cljs.adler32/make-adler32, :variadic false, :file "target/cljsbuild/public/js/out/fressian_cljs/adler32.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:value value}, :order [:value value]}, :doc nil}