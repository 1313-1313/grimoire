;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name chord.format.fressian, :imports nil, :requires {f chord.format, chord.format chord.format, fressian fressian-cljs.core, fressian-cljs.core fressian-cljs.core}, :uses nil, :defs {t_chord$format$fressian33672 {:num-fields 2, :protocols #{cljs.core/IMeta cljs.core/IWithMeta chord.format/ChordFormatter}, :name chord.format.fressian/t_chord$format$fressian33672, :file "target/cljsbuild/public/js/out/chord/format/fressian.cljc", :type true, :anonymous true, :column 3, :line 10, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_chord$format$fressian33672 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta chord.format/ChordFormatter}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([_ meta33673])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta chord.format/ChordFormatter}, :name chord.format.fressian/->t_chord$format$fressian33672, :variadic false, :file "target/cljsbuild/public/js/out/chord/format/fressian.cljc", :method-params ([_ meta33673]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 10, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ meta33673])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros nil, :cljs.analyzer/constants {:seen #{_ meta33673 :fressian}, :order [:fressian _ meta33673]}, :doc nil}